local function FindLowestBit(buff, start, end)
     --local next = bit32.band(x + 7, -8)

     local firstByteIndex = start//8
     local endByteIndex = end//8
     local firstBitIndex = start - firstByteIndex*8

     local firstByte = bit32.rshift(buffer.readu8(buff, firstByteIndex), firstBitIndex)
     local firstSetBitIndex = bit32.rzcount(firstByte)

     if firstByteIndex == endByteIndex then
          return math.min(firstSetBit, 7-firstSetBitIndex)
     elseif firstSetBit == 32
     
     
end

local buff = buffer.create(60)
FindLowestBit(buff, 3, 57)
